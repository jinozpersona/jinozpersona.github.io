[ { "title": "Practice Coding - Lv2 devon code golf problem", "url": "/posts/coding-Lv2-devon-code-golf-problem-150char/", "categories": "Practice, Lv2", "tags": "coding, practice, lv2, devon, code, golf, problem, 150char", "date": "2022-03-07 22:00:00 +0900", "snippet": "디브온 코드골프 문제디브온에서 미니대안언어축제가 진행되던 M2 밖에 텍스트큐브 부스에서 재미있는 코드골프 문제 풀기가 있었습니다. 150자 이하로 푸신 분들에게는 즉석에서 제공되는 원두커피와 텀블러가 상으로 주어졌다고 합니다.문제는 아래와 같습니다. 이 결과가 나와야 하는데 언어 제약은 없답니다. * ** * * * * * ** ** * * * ** * * *출처 : codingdojangplatform : python 접근방법 replace binary normal algorithm List Comprehesion My AnswerClick Here## datans=[32,32,80,136,260,1539,260,136,80,32,32]## List Comprehension #1# nb=[&quot;{0:b}&quot;.format(i).zfill(11) for i in ns]# [print(n.replace(&#39;1&#39;, &#39;*&#39;).replace(&#39;0&#39;,&#39; &#39;)) for n in nb]## List Comprehension #2[print(&quot;{0:b}&quot;.format(n).zfill(11).replace(&#39;1&#39;, &#39;*&#39;).replace(&#39;0&#39;,&#39; &#39;)) for n in ns]## algorithm# for i in ns:# nb = &quot;{0:b}&quot;.format(i).zfill(11)# print(&quot;{}&quot;.format(nb.replace(&#39;1&#39;, &#39;*&#39;).replace(&#39;0&#39;,&#39; &#39;)))" }, { "title": "Practice Coding - Lv2 cycle length 3n+1 problem", "url": "/posts/coding-Lv2-paul_erdos_3nPlus1_problem/", "categories": "Practice, Lv2", "tags": "coding, practice, lv2, Paul Erd'os, 3n+1, cycle length", "date": "2022-02-27 13:00:00 +0900", "snippet": "3n+1 Problem어떤 정수 n에서 시작해, n이 짝수면 2로 나누고, 홀수면 3을 곱한 다음 1을 더한다. 이렇게 해서 새로 만들어진 숫자를 n으로 놓고, n=1 이 될때까지 같은 작업을 계속 반복한다. 예를 들어, n=22이면 다음과 같은 수열이 만들어진다.22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1n이라는 값이 입력되었을때 1이 나올때까지 만들어진 수의 개수(1을 포함)를 n의 사이클 길이라고 한다. 위에 있는 수열을 예로 들면 22의 사이클 길이는 16이다. i와 j라는 두개의 수가 주어졌을때, i와 j사이의 모든 수(i, j포함)에 대해 최대 사이클 길이를 구하라.입력 예1 10100 200201 210900 1000출력 예1 10 20100 200 125201 210 89900 1000 174※ 참고어떤 자연수 n에 대해서도, 이 조작을 유한 번 시행하면 1이 될 것이라고 예상하는데, 700,000,000,000보다 작은 모든 짝수에 대해 성립한다는 것이 밝혀져 있긴 하지만, 아직 아무도 증명하지 못했습니다. 유명한 헝가리 수학자 폴 에르되시(Paul Erd’ os)는, “우리의 수학은 아직 이 문제를 풀 준비가 되어 있지 않다.” 라고 했습니다.출처 : codingdojangplatform : python 접근방법 Paul Erd’os Algorithm 이해 for n in range(i+1,j) if even: else: function paul_erdos_fun return max(cycle_list) My AnswerClick Heredef paul_erdos_fun(i,j): i = int(i) j = int(j) cycle_list = [] for n in range(i+1,j): input_num = int(n) paul_series = [input_num] while input_num != 1: if input_num%2 == 0: input_num = int(input_num/2) paul_series.append(input_num) # print(&quot;even fun:{}&quot;.format(input_num)) else: input_num = int(input_num*3 + 1) paul_series.append(input_num) # print(&quot;odd fun:{}&quot;.format(input_num)) cycle_list.append(len(paul_series)) print(&quot;{} | cycle_length:{}&quot;.format(n,len(paul_series))) # print(&quot;paul_series:{}&quot;.format(paul_series)) return cycle_listcycle_list = paul_erdos_fun(900,1000)print(&quot;cycle_list:{}&quot;.format(cycle_list))print(&quot;max_cycle:{}&quot;.format(max(cycle_list)))" }, { "title": "Practice Coding - Lv2 number counting", "url": "/posts/coding-Lv2-number-counting/", "categories": "Practice, Lv2", "tags": "coding, practice, lv2, google, number, counting", "date": "2022-02-26 23:00:00 +0900", "snippet": "구글 입사문제 중에서1부터 10,000까지 8이라는 숫자가 총 몇번 나오는가?8이 포함되어 있는 숫자의 갯수를 카운팅 하는 것이 아니라 8이라는 숫자를 모두 카운팅 해야 한다.(※ 예를들어 8808은 3, 8888은 4로 카운팅 해야 함)출처 : codingdojangplatform : python 접근방법 counting function number element separate &amp;amp; counting My AnswerClick Heredef counting_fun(input_num): input_num = str(input_num) cnt = 0 for element in input_num: if element == &quot;8&quot;: cnt = cnt + 1 else: pass return cntnum_range = range(1,10000)cnt_list = []for i in num_range: cnt_output = counting_fun(i) cnt_list.append(cnt_output)print(&quot; total_conting:{} \\n counting_sum of number 8 :{}&quot;.format(len(cnt_list), sum(cnt_list)))" }, { "title": "Practice Coding - Lv2 Kaprekar Self-Number", "url": "/posts/coding-Lv2-Kaprekar-self_number/", "categories": "Practice, Lv2", "tags": "coding, practice, lv2, Nexon, Kaprekar, self number", "date": "2022-02-26 22:00:00 +0900", "snippet": "넥슨 입사문제 중에서d(91) = 9 + 1 + 91 = 101이 때, n을 d(n)의 제네레이터(generator)라고 한다. 위의 예에서 91은 101의 제네레이터이다.어떤 숫자들은 하나 이상의 제네레이터를 가지고 있는데, 101의 제네레이터는 91 뿐 아니라 100도 있다. 그런데 반대로, 제네레이터가 없는 숫자들도 있으며, 이런 숫자를 인도의 수학자 Kaprekar가 셀프 넘버(self-number)라 이름 붙였다. 예를 들어 1,3,5,7,9,20,31 은 셀프 넘버 들이다.1 이상이고 5000 보다 작은 모든 셀프 넘버들의 합을 구하라.출처 : codingdojangplatform : python 접근방법 Kaprekar Self-Number Algorithm 이해 gen_num 입력으로 얻어지는 dn function dn이 5000 보다 작거나 같은 범위의 dn_list dn_list의 중복 제거 dn_list_set dn_list_set을 제외한 self-number 출력 및 총합 My AnswerClick Heredef kaprekar_fun(gen_num): gen_num = str(gen_num) gen_num_list = [] for element in gen_num: gen_num_list.append(int(element)) gen_num_list.append(int(gen_num)) dn = sum(gen_num_list) print(&quot;gen_num: {},{} | d(n):{}&quot;.format(gen_num,gen_num_list,dn)) return dnnum_range = range(1,5000)kaprekar_output = []# for i in range(1,110): for i in num_range: dn = kaprekar_fun(i) if dn &amp;gt;= 5000: # i = 4975 then dn = 5000 print(i,dn) break else: kaprekar_output.append(dn)kaprekar_output_sorted_set = list(set(sorted(kaprekar_output)))print(&quot;d(n)_set:\\n{}&quot;.format(kaprekar_output_sorted_set))kaprekar_self_num = []for n in num_range: if n not in kaprekar_output_sorted_set: kaprekar_self_num.append(n) else: passprint(&quot;kaprekar_self_numbers:\\n{}&quot;.format(kaprekar_self_num))print(&quot;Sum of kaprekar_self_numbers:\\n{}&quot;.format(sum(kaprekar_self_num)))" }, { "title": "Coding Study - fibonacci_series", "url": "/posts/coding-study-fibonacci_series/", "categories": "Coding, Study", "tags": "coding, study, fibonacci, series", "date": "2022-02-17 12:00:00 +0900", "snippet": "시저 암호 풀기피보나치 수열0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, …platform : python 접근방법 fibonacci series algorithm function : f(t) = f(t-1) + f(t-2) try except : plus integer My AnswerClick Heredef fib_series(): fib_lists = [0, 1] while True: try: n = int(input(&quot;input target number:&quot;)) if n &amp;lt; 0: print(&quot;please input plus integer&quot;) continue except ValueError as v: print(v) else: if n == 0: print(&quot;wrong number&quot;) else: for n in range(n): fib_lists.append(fib_lists[n]+fib_lists[n+1]) print(&quot;fib_series:{}&quot;.format(fib_lists)) breakfib_series()" }, { "title": "Practice Coding - Lv1 caesar encryption", "url": "/posts/coding-Lv1-caesar-encryption/", "categories": "Practice, Lv1", "tags": "coding, practice, lv1, caesar, encryption", "date": "2022-02-16 21:00:00 +0900", "snippet": "시저 암호 풀기시저 암호는, 고대 로마의 황제 줄리어스 시저가 만들어 낸 암호인데, 예를 들어 알파벳 A를 입력했을 때, 그 알파벳의 n개 뒤에 오는(여기서는 예를 들 때 3으로 지정하였다)알파벳이 출력되는 것이다. 예를 들어 바꾸려는 단어가 ‘CAT”고, n을 5로 지정하였을 때 “HFY”가 되는 것이다.어떠한 암호를 만들 문장과 n을 입력했을 때 암호를 만들어 출력하는 프로그램을 작성해라.출처 : codingdojangplatform : python 접근방법 alphabet list try except string encrytion function for n output My AnswerClick Herefrom string import ascii_lowercase alph_list = list(ascii_lowercase)while True: try: input_strs = input(&quot;input alphabet only lowercase:&quot;) if input_strs.isalpha() != True: print(&quot;Please input alphabet&quot;) continue elif input_strs.islower() != True: print(&quot;Please input lowercase&quot;) continue else: pass except Exception as e: print(&quot;Exception msg: {}&quot;.format(e)) else: while True: try: input_n = int(input(&quot;input shift number(plus integer):&quot;)) if input_n &amp;gt;= 0: break else: print(&quot;Please input plus integer number&quot;) continue # input_n = int(input(&quot;input shift number(plus integer):&quot;)) except ValueError as v: print(v) print(&quot;Confirm your input {}, {}&quot;.format(input_strs, input_n)) break input_conv_list = []for input_str in input_strs: shift_n = alph_list.index(input_str) + int(input_n) if shift_n &amp;gt; len(alph_list): shift_n = shift_n - len(alph_list) input_conv_list.append(alph_list[shift_n])print(&quot;Done caesar_enctyption : {}&quot;.format(&#39;&#39;.join(input_conv_list)))" }, { "title": "Practice Coding - Lv1 seperate character-set to string / int", "url": "/posts/coding-Lv1-seperate-character-set-to-string-int/", "categories": "Practice, Lv1", "tags": "coding, practice, lv1, character, seperate", "date": "2022-02-10 13:00:00 +0900", "snippet": "수 암호화 프로그램문자와 숫자가섞인 문자열을 입력받을때 구별하여출력해라input:“c910m6ia 1ho”output:str : cma hoint : 91061출처 : codingdojangplatform : python 접근방법 character string 분리하기 list의 각 원소를 string type으로 전환 int는 string이 아닌 int type으로 전환 My AnswerClick Hereinput_charset = &quot;c910m6ia 1ho&quot;print(&quot;input : {}\\n type : {}\\n\\n&quot;.format(input_charset, type(input_charset)))strset = []intset = []intset_int = []for tstr in input_charset: if tstr.isdigit(): intset.append(tstr) intset_int.append(int(tstr)) else: strset.append(tstr)# print(&quot;str : {}&quot;.format(&#39;, &#39;.join(strset).replace(&#39;, &#39;,&#39;&#39;)))# print(&quot;int : {}&quot;.format(&#39;, &#39;.join(intset).replace(&#39;, &#39;,&#39;&#39;)))print(&quot;str : {}&quot;.format(&#39;&#39;.join(strset)))print(&quot;int : {}&quot;.format(&#39;&#39;.join(intset)))print(&quot;----****----&quot;)print(&quot;strset string list : {}&quot;.format(strset))print(&quot;intset string list : {}&quot;.format(intset))print(&quot;intset int list : {}&quot;.format(intset_int))print(&quot;----****----&quot;)conv_intset = int(&#39;&#39;.join(intset))print(&quot;convert to int type from intset: {}, converted type: {}&quot;.format(conv_intset, type(conv_intset)))" }, { "title": "Practice Coding - Lv1 baskin robbins 31 game", "url": "/posts/coding-Lv1-baskin-robbins-31-game/", "categories": "Practice, Lv1", "tags": "coding, practice, lv1, baskin robbins 31", "date": "2022-02-07 11:00:00 +0900", "snippet": "배스킨라빈스31게임게임의 참여자들은 차례를 정해 1부터 31까지의 수를 순차적으로 부른다. 한번에 1~3개까지 수를 연달아 부를 수 있으며, 마지막 31을 부른 사람이 진다. 컴퓨터가 무조건 먼저 시작하고,1P는 무조건 2번째로 말한다.컴퓨터가 무조건 이기게 만들어라. LEVEL1 예상 힌트1:4n-2라는 공식을 사용하면 됩니다. 힌트2:이 게임은 31을 부르면 지는 게임이니 30을 부르면 이깁니다.출처 : codingdojangplatform : python 접근방법 king_number 4n+2 이해 try except : force input number to player Algorithm for king win! Grame Process print… My AnswerClick Heregame_cnt = 0ttl_cnt = 0player_cnt = 0print(&quot;*********************&quot;)print(&quot;****---31 Game---****&quot;)print(&quot;*********************\\n&quot;)# king_number = [int(4*n+2) for n in range(8)]king_run = 2while ttl_cnt != 31: game_cnt = game_cnt + 1 print(&quot;--*-- Game Count : {}번째 --*-- &quot;.format(game_cnt)) for king_input in range(king_run): print(&quot;king : {}&quot;.format(ttl_cnt+1)) ttl_cnt = ttl_cnt + 1 king_input = ttl_cnt player_run = 0 while player_run &amp;lt;= 2: if player_run == 0: player_input = input(&quot;player(press Enter): {}&quot;.format(ttl_cnt + 1)) player_input = int(ttl_cnt + 1) player_run = player_run + 1 ttl_cnt = ttl_cnt + 1 else: player_input = input(&quot;palyer(turn over press Enter): &quot;) if player_input == &#39;&#39;: player_input = ttl_cnt # print(&quot;player turn over&quot;) break else: try: int(player_input) it_is = True player_input = int(player_input) except ValueError: it_is = False if it_is == True and player_input == ttl_cnt + 1: player_run = player_run + 1 ttl_cnt = ttl_cnt + 1 else: print(&quot;Your input_num is wrong, please input positive integer number.&quot;) if int(player_input) == 31: print(&quot;\\n&quot;) print(&quot;--**********************--&quot;) print(&quot;--****--King Win!!--****--&quot;) print(&quot;--**********************--&quot;) break elif int(king_input) == 31: print(&quot;\\n&quot;) print(&quot;--*--Unbelievable!!--*--&quot;) print(&quot;--**--Player Win!!--**--&quot;) print(&quot;--********************--&quot;) break else: king_run = 4 - player_run" }, { "title": "Practice Coding - Lv1 marathon-forecast-problem", "url": "/posts/coding-Lv1-marathon-forecast-problem/", "categories": "Practice, Lv1", "tags": "coding, practice, lv1, marathon, forecast", "date": "2022-02-07 10:00:00 +0900", "snippet": "기계의 마라톤 기록항상 일정한 속도로 달리는 기계가 있다고 합시다.이 기계의 100m 달리기 기록을 입력받으면 마라톤에서의 기록을 구하시면 됩니다. 마라톤 경기에서 달리는 거리는 42.195km입니다. 100m 달리기와 마라톤의 코스는 모두 직선이라고 합니다(회전 시 걸리는 시간을 고려하지 않습니다). 기계의 파손 및 배터리 방전 시간도 고려하지 않습니다.출처 : codingdojangplatform : python 접근방법 input number try except 실수 확인, 양의 정수 판별 forecast time function output My Answer!Click Hereinput_num = input(&quot;robot lap time(sec) for 100m: &quot;)try: float(input_num) it_is = True input_num = float(input_num)except ValueError: it_is = Falseif it_is == True and input_num &amp;gt;= 0: do_forecast = round(42.195/(0.1/(input_num/60)),1) print(&quot;forecast time for marathon 42.195km: {} min\\n&quot;.format(do_forecast,1))else: print(&quot;Your input_num is wrong, please input positive float number.&quot;)" }, { "title": "Practice Coding - Lv1 password encryption", "url": "/posts/coding-Lv1-password-encryption/", "categories": "Practice, Lv1", "tags": "coding, practice, lv1, password, encryption", "date": "2022-02-07 09:00:00 +0900", "snippet": "수 암호화 프로그램0~25만의 수 1개를 입력으로 받으면 그 수를 암호화하여 출력하는 프로그램을 작성하세요. 방법은 다음과 같습니다. 입력받은 수의 제곱근에 1000을 곱한다. (예시: 2 =&amp;gt; 1.414213… * 1000 =&amp;gt; 1414.213…) 1의 결과에서 소수점 이하를 버림한다. (예시: 1414.213… =&amp;gt; 1414) 2의 결과에서 입력받은 수를 뺀다.(예시: 1414 =&amp;gt; 1414 - 2 =&amp;gt; 1412) 이렇게 하면 2를 입력받았을 때 1412를 출력합니다.다음 결과로 테스트하세요.password(2)1412출처 : codingdojangplatform : python 접근방법 input number try except 정수 확인, 양의 정수 판별 encryption number function output My AnswerClick Hereinput_num = input(&quot;password: &quot;)try: int(input_num) it_is = True input_num = int(input_num)except ValueError: it_is = Falseif it_is == True and input_num &amp;gt;= 1 and input_num &amp;lt;= 2.5*10**5: do_secret = int((input_num**(1/2))*10**3) - input_num print(&quot;encryption number : {}\\n&quot;.format(do_secret))else: print(&quot;Your input_num is wrong, please input positive integer number.&quot;)" }, { "title": "Practice Coding - Lv1 UP&amp;DOWN game", "url": "/posts/coding-Lv1-up-and-down-game/", "categories": "Practice, Lv1", "tags": "coding, practice, lv1, up and down", "date": "2022-02-04 09:00:00 +0900", "snippet": "업앤다운 UP&amp;amp;Down 숫자맞추기 게임컴퓨터가 1~100 숫자(정수 범위) 중 하나를 랜덤으로 정합니다. (이를 알려주지 않습니다.)사용자는 이 숫자를 맞추어야 합니다.입력한 숫자보다 정답이 크면 → “UP” 출력,입력한 숫자보다 정답이 작으면 → “DOWN” 출력.정답을 맞추면 → “정답”을 출력하고, 지금까지 숫자를 입력한 횟수를 알려줍니다.출처 : codingdojangplatform : python 접근방법 랜덤 숫자 추출 try except 정수 확인 양의 정수 판별 while 반복문 안에서 if 조건에 맞는 내용 출력 My AnswerClick Hereimport randomtarget_num = random.randrange(1,101)# test try# target_num = 10try_cnt = 1while try_cnt &amp;gt; 0: input_num = input(&quot;Please input number: &quot;) try: int(input_num) it_is = True input_num = int(input_num) except ValueError: it_is = False # print(it_is) if it_is == True and input_num &amp;gt;= 1: if input_num == target_num: print(&quot;정답 : Target Num = {}, Your Answer = {}\\n시도 횟수 : {}\\n&quot;.format(target_num,input_num, try_cnt)) break elif input_num &amp;lt; target_num: print(&quot;UP : {} --- Target Num, try_cnt = {}\\n&quot;.format(input_num, try_cnt)) try_cnt = try_cnt + 1 elif input_num &amp;gt; target_num: print(&quot;DOWN : Target Num --- {}, try_cnt = {}\\n&quot;.format(input_num, try_cnt)) try_cnt = try_cnt + 1 else: print(&quot;Your input_num is wrong, please input positive integer number.&quot;)" }, { "title": "First Post", "url": "/posts/first-post/", "categories": "Blog, Post", "tags": "post", "date": "2022-01-30 19:00:00 +0900", "snippet": "jinozpersona.github.io theme 적용 및 포스트 작성 과정 기록Intro GitHub 가입 및 git commit/push github.io 블로그 생성 github.io jekyll bundler 설치 및 git push 적용 githun.io chirpy-theme 적용 및 git push1. GitHub 가입 및 git commit/pushGitHub 회원 가입과 git 사용하기2. github.io 블로그 생성github.io 일명 github page 생성하기3. github.io jekyll bundler 설치 및 git push 적용github jekyll theme 사용을 위한 ruby 설치와 localhost server 실행4. github.io chirpy-theme 적용 및 git pushjekyll theme 적용 과정" } ]
